{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Controls/Controls.module.css","components/Notification/Notification.module.css","components/Controls/Controls.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Controls","statNames","onBtnFeedback","className","s","title","buttonList","map","name","button","onClick","Statistics","good","neutral","bad","total","percentage","statInfo","defaultProps","Notification","message","text","App","state","addFeedback","key","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,SAAW,+B,gBCA/DD,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,WAAa,6BAA6B,OAAS,2B,qBCArGD,EAAOC,QAAU,CAAC,KAAO,6B,+LCmBVC,EAhBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,cAAd,OACf,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAWC,IAAEC,MAAjB,mCACA,qBAAKF,UAAWC,IAAEE,WAAlB,SACGL,EAAUM,KAAI,SAAAC,GAAI,OACjB,wBAAQL,UAAWC,IAAEK,OAAmBC,QAAS,kBAAMR,EAAcM,IAArE,SACGA,GAD+BA,Y,gBCLpCG,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,WAA9B,OACjB,sBAAKb,UAAU,YAAf,UACE,oBAAIA,UAAWC,IAAEC,MAAjB,yBACA,oBAAGF,UAAWC,IAAEa,SAAhB,mBAAiCL,KACjC,oBAAGT,UAAWC,IAAEa,SAAhB,sBAAoCJ,KACpC,oBAAGV,UAAWC,IAAEa,SAAhB,kBAAgCH,KAChC,oBAAGX,UAAWC,IAAEa,SAAhB,oBAAkCF,KAClC,oBAAGZ,UAAWC,IAAEa,SAAhB,gCAA8CD,EAA9C,WAIJL,EAAWO,aAAe,CACxBF,WAAY,GAWCL,Q,gBCdAQ,EATM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,qBAAKjB,UAAU,YAAf,SACE,mBAAGA,UAAWC,IAAEiB,KAAhB,SAAuBD,OC6CZE,E,4MA5CbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAME,EAAUF,GAAO,O,EAI5BG,mBAAqB,WAEnB,OADc,EAAKL,MAAMX,KAAO,EAAKW,MAAMV,QAAU,EAAKU,MAAMT,K,EAIlEe,gCAAkC,WAChC,GAAI,EAAKN,MAAMX,KAAO,EACpB,OAAOkB,KAAKC,MAAO,EAAKR,MAAMX,KAAO,EAAKgB,qBAAwB,M,4CAItE,WACE,MAA+BI,KAAKT,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAUF,UAAWgC,OAAOC,KAAKF,KAAKT,OAAQrB,cAAe8B,KAAKR,cACjEQ,KAAKJ,qBAAuB,EAC3B,cAAC,EAAD,CACEhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,KAAKJ,qBACZZ,WAAYgB,KAAKH,oCAGnB,cAAC,EAAD,CAAcT,QAAQ,6B,GAtCde,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90ebf25b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__2jHx-\",\"statInfo\":\"Statistics_statInfo__1SjH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Controls_title__9FCw0\",\"buttonList\":\"Controls_buttonList__1o_Oi\",\"button\":\"Controls_button__ickqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__2jNfw\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Controls.module.css';\r\n\r\nconst Controls = ({ statNames, onBtnFeedback }) => (\r\n  <div className=\"container\">\r\n    <h1 className={s.title}>Please leave feedback</h1>\r\n    <div className={s.buttonList}>\r\n      {statNames.map(name => (\r\n        <button className={s.button} key={name} onClick={() => onBtnFeedback(name)}>\r\n          {name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\nControls.propTypes = {\r\n  statNames: PropTypes.arrayOf(PropTypes.string),\r\n  onBtnFeedback: PropTypes.func,\r\n};\r\nexport default Controls;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentage }) => (\r\n  <div className=\"container\">\r\n    <h2 className={s.title}>Statisctics</h2>\r\n    <p className={s.statInfo}>Good: {good}</p>\r\n    <p className={s.statInfo}>Neutral: {neutral}</p>\r\n    <p className={s.statInfo}>Bad: {bad}</p>\r\n    <p className={s.statInfo}>Total: {total}</p>\r\n    <p className={s.statInfo}>Positive Feedback: {percentage}%</p>\r\n  </div>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  percentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  percentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <div className=\"container\">\r\n    <p className={s.text}>{message}</p>\r\n  </div>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\nexport default Notification;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Controls from './components/Controls';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = key => {\n    this.setState(prevState => ({\n      [key]: prevState[key] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    if (this.state.good > 0) {\n      return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n    }\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"App\">\n        <Controls statNames={Object.keys(this.state)} onBtnFeedback={this.addFeedback} />\n        {this.countTotalFeedback() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            percentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}